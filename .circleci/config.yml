version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.11.2

jobs:
  lint:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Build and push docker image
          command: |
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
            docker build --tag=udacity-capstone .
            docker tag udacity-capstone nasstoumi/udacity-capstone
            docker push nasstoumi/udacity-capstone

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          #get-rollout-status: true
          resource-file-path: deployment.yml
          resource-name: deployment/udacity-capstone

  check-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: check cluster
          command: |
            kubectl get nodes
            kubectl get deployment

workflows:
  deployment:
    jobs:
      - lint
      - build:
          requires:
            - lint
      - aws-eks/create-cluster:
          cluster-name: udacity-capstone
      - create-deployment:
          cluster-name: udacity-capstone
          requires:
            - aws-eks/create-cluster
      - aws-eks/update-container-image:
          cluster-name: udacity-capstone
          container-image-updates: udacity-capstone=nasstoumi/udacity-capstone
          post-steps:
              - kubernetes/delete-resource:
                  resource-names: udacity-capstone
                  resource-types: deployment
                  wait: true
          record: true
          requires: 
            - create-deployment
          resource-name: deployment/udacity-capstone

      - check-cluster:
          cluster-name: udacity-capstone
          requires: 
            - aws-eks/update-container-image
      - aws-eks/delete-cluster:
          cluster-name: udacity-capstone
          requires: 
            - check-cluster

